{"version":3,"sources":["components/Item/index.jsx","App.js","index.js"],"names":["Item","props","handleMouseEnter","e","deleteIcon","document","getElementById","target","dataset","num","addIcon","style","display","handleMouseLeave","handleAddDescription","descriptionBox","descriptionText","this","item","id","marked","createdAt","lastUpdatedAt","text","deleted","description","data-num","className","onMouseEnter","onMouseLeave","type","checked","onChange","handleChangeSingle","onClick","handleDelete","value","onKeyPress","handleKeyPress","handleDescriptionChange","React","Component","App","key","state","idCount","Date","toLocaleString","setState","itemList","textValue","unmarkedItemCount","handleTextChange","handleMarkingAll","checkState","markedItemCount","length","map","deletedItemCount","filter","console","log","parseInt","handleDeleteMarked","markedDeleteCount","handleSearch","filteredList","toLowerCase","includes","searchValue","handleKeyPressDescription","words","slice","split","word","join","placeholder","htmlFor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec99397b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleMouseEnter = (e) => {\r\n        // displaying the add description icon and delete icon when the mouse enters the item area.\r\n        const deleteIcon = document.getElementById('delete' + e.target.dataset.num);\r\n        const addIcon = document.getElementById('add' + e.target.dataset.num);\r\n        if (deleteIcon && deleteIcon.style) {\r\n            deleteIcon.style.display = 'inline-block';\r\n        }\r\n        if (addIcon && addIcon.style) {\r\n            addIcon.style.display = 'inline-block';\r\n        }\r\n    }\r\n\r\n    handleMouseLeave = (e) => {\r\n        // hiding the add description icon and delete icon when the mouse leaves the item area.\r\n        const deleteIcon = document.getElementById('delete' + e.target.dataset.num);\r\n        const addIcon = document.getElementById('add' + e.target.dataset.num);\r\n        if (deleteIcon && deleteIcon.style) {\r\n            deleteIcon.style.display = 'none';\r\n        }\r\n        if (addIcon && addIcon.style) {\r\n            addIcon.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    handleAddDescription = (e) => {\r\n        // on click of the add description icon show the description text box to enter the description.\r\n        const descriptionBox = document.getElementById('descriptionInput' + e.target.dataset.num);\r\n        const descriptionText = document.getElementById('description' + e.target.dataset.num);\r\n        descriptionBox.style.display = 'inline-block';\r\n        descriptionText.style.display = 'none';\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { id, marked, createdAt, lastUpdatedAt, deleted, text, description } = this.props.item;\r\n        return (\r\n            // adding a data-num field to every div and child element to keep track of the particular item \r\n            // when mouse leaves from any point in the area.\r\n            <div data-num={id}>\r\n                <div data-num={id} id={'view' + id} className=\"view\" onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n                    <div data-num={id}>\r\n                        <input data-num={id} className=\"toggle\" type=\"checkbox\" checked={marked} id={\"check\" + id} onChange={this.props.handleChangeSingle} />\r\n                        <label data-num={id} className=\"viewText\">{text}</label>\r\n                        <a data-num={id} id={'add' + id} className=\"add\" onClick={this.handleAddDescription}></a>\r\n                        {marked && <a data-num={id} id={'delete' + id} className=\"delete\" onClick={this.props.handleDelete}></a>}\r\n                    </div>\r\n                    <div data-num={id} className=\"description\" id={'description' + id}>\r\n                        {description}\r\n                    </div>\r\n\r\n                    <div data-num={id} className=\"date\">\r\n                        <span data-num={id} className=\"created\">Created At: {createdAt} </span>\r\n                        <span data-num={id} className=\"updated\">Last Updated At: {lastUpdatedAt}</span>\r\n                    </div>\r\n                </div>\r\n                <input data-num={id} className=\"descriptionInput\" value={description} id={'descriptionInput' + id} onKeyPress={this.props.handleKeyPress}\r\n                    onChange={this.props.handleDescriptionChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Fragment } from 'react';\nimport './App.css';\nimport Item from './components/Item';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      idCount: 1, // count of the items\n      textValue: '', // value of the input item.\n      itemList: [], // original list of items\n      filteredList: [], // search filtered list of items\n      searchValue: '', // value of the search text field\n      markedItemCount: 0, // items which are marked \n      unmarkedItemCount: 0, // items which are not marked.\n      deletedItemCount: 0 // items which are deleted.\n    }\n  }\n\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') { // on pressing enter key we are submitting the response\n      // declaring an item\n      const item = {\n        id: this.state.idCount,\n        marked: false, // initially every item is unmarked,\n        createdAt: new Date().toLocaleString(),\n        lastUpdatedAt: new Date().toLocaleString(),\n        deleted: false,\n        text: e.target.value,\n        description: \"\",\n      }\n      this.setState({\n        itemList: [...this.state.itemList, item], idCount: this.state.idCount + 1,\n        textValue: '', unmarkedItemCount: this.state.unmarkedItemCount + 1\n      });\n    }\n  }\n\n  handleTextChange = (e) => {\n    // changing the text value of the item input box to be the value entered.\n    this.setState({ textValue: e.target.value });\n  }\n\n\n  handleMarkingAll = (e) => {\n    // if the mark all checkbox is checked then unmark all the checkboxes, and \n    // if the mark all checkbox is unchecked then mark all the checkboxes.\n    const checkState = this.state.markedItemCount === this.state.itemList.length;\n    const itemList = this.state.itemList.map(item => {\n      item.marked = checkState === true ? false : true;\n      return item;\n    });\n    // count the delete items so that they are not counted in marked and unmarked.\n    const deletedItemCount = itemList.filter(item => item.deleted).length;\n    const markedItemCount = itemList.filter(item => item.marked && !item.deleted).length;\n    console.log(markedItemCount);\n    const unmarkedItemCount = itemList.length - markedItemCount - deletedItemCount;\n    this.setState({ itemList, markedItemCount, unmarkedItemCount, deletedItemCount });\n  }\n\n  handleDelete = (e) => {\n    // handle Delete of a single item\n    const id = e.target.dataset.num;\n    const itemList = this.state.itemList.map(item => {\n      if (parseInt(item.id) === parseInt(id)) {\n        item.deleted = true;\n      }\n      return item;\n    });\n\n    this.setState({\n      itemList,\n      markedItemCount: this.state.markedItemCount - 1\n    });\n\n  }\n\n  handleDeleteMarked = (e) => {\n    // handle delete of all items that are marked.\n    let markedDeleteCount = 0;\n    const itemList = this.state.itemList.map(item => {\n      if (item.marked) {\n        markedDeleteCount++;\n        item.deleted = true;\n      }\n      return item;\n    });\n    this.setState({\n      itemList,\n      markedItemCount: this.state.markedItemCount - markedDeleteCount, deletedItemCount: this.state.deletedItemCount + 1\n    });\n  }\n\n  handleDescriptionChange = (e) => {\n    // change the description of the item.\n    const id = parseInt(e.target.dataset.num);\n    const itemList = this.state.itemList.map(item => {\n      if (parseInt(item.id) === id) {\n        item.description = e.target.value;\n      }\n      return item;\n    });\n    this.setState({ itemList });\n  }\n\n  handleSearch = (e) => {\n    // searching for a specific or list of items.\n    const value = e.target.value;\n    let filteredList = this.state.itemList;\n    if (value.length >= 3) {\n      filteredList = this.state.itemList.filter(item => (item.text &&\n        item.text.toLowerCase().includes(value.toLowerCase())) ||\n        (item.description && item.description.toLowerCase().includes(value.toLowerCase())));\n    }\n    this.setState({ filteredList, searchValue: value });\n  }\n\n  handleKeyPressDescription = (e) => {\n    // on pressing enter when the description is finished.\n    if (e.key === 'Enter') {\n      const descriptionBox = document.getElementById('descriptionInput' + e.target.dataset.num);\n      const descriptionText = document.getElementById('description' + e.target.dataset.num);\n      const id = parseInt(e.target.dataset.num);\n      const itemList = this.state.itemList.map(item => {\n        const words = item.description && item.description.slice(0, 140).split(' ') || [];\n        const description = words && words.length && words.map(word => word.slice(0, 30)).join(' ') || '';\n        if (parseInt(item.id) === id) {\n          item.description = description;\n          item.lastUpdatedAt = new Date().toLocaleString();\n        }\n        return item;\n      });\n      descriptionBox.style.display = 'none';\n      descriptionText.style.display = 'inline-block';\n      this.setState({ itemList });\n    }\n  }\n\n  handleChangeSingle = (e) => {\n    // handle checking and unchecking of a single item.\n    const id = parseInt(e.target.dataset.num);\n    const itemList = this.state.itemList.map(item => {\n      if (parseInt(item.id) === id) {\n        item.marked = !item.marked;\n      }\n      return item;\n    });\n    const deletedItemCount = itemList.filter(item => item.deleted).length;\n    const markedItemCount = itemList.filter(item => item.marked && !item.deleted).length;\n    const unmarkedItemCount = itemList.length - markedItemCount - deletedItemCount;\n    this.setState({ itemList, markedItemCount, unmarkedItemCount, deletedItemCount });\n  }\n\n\n  render() {\n    const { textValue, searchValue, filteredList, unmarkedItemCount, markedItemCount, itemList } = this.state;\n    return (\n      <Fragment>\n        <div className=\"todoapp\">\n          <h1 className=\"heading\">TODOS</h1>\n          <input id=\"new-todo\" type=\"text\" value={textValue} onKeyPress={this.handleKeyPress} onChange={this.handleTextChange} placeholder=\"What needs to be done?\" />\n          {(unmarkedItemCount !== 0 || markedItemCount !== 0) &&\n            (\n              <Fragment>\n                <input id=\"toggle-all\" type=\"checkbox\"\n                  checked={markedItemCount === itemList.length}\n                  onChange={this.handleMarkingAll} />\n                <label htmlFor=\"toggle-all\" >Mark all as complete</label>\n                <input id=\"search-todo\" type=\"text\" value={searchValue} onChange={this.handleSearch} placeholder=\"What you want to search?\" />\n\n                {searchValue && searchValue.length >= 3 && filteredList.length >= 1 && filteredList.map(item =>\n                  !item.deleted && (<Item key={item.id} item={item} handleDelete={this.handleDelete}\n                    handleChangeSingle={this.handleChangeSingle}\n                    handleKeyPress={this.handleKeyPressDescription}\n                    handleDescriptionChange={this.handleDescriptionChange} />)\n                )}\n\n\n                {(!searchValue || searchValue.length < 3) && itemList.length >= 1 && itemList.map(item =>\n                  !item.deleted && (<Item key={item.id} item={item} handleDelete={this.handleDelete}\n                    handleChangeSingle={this.handleChangeSingle}\n                    handleKeyPress={this.handleKeyPressDescription}\n                    handleDescriptionChange={this.handleDescriptionChange} />)\n                )}\n\n                <div className=\"footer\">\n                  <span><b>{unmarkedItemCount}</b> items left </span>\n                  {markedItemCount > 0 && <a id=\"clear-completed\" onClick={this.handleDeleteMarked}>Clear {markedItemCount} completed items</a>}\n                </div>\n\n              </Fragment>)}\n        </div>\n\n        {this.state.deletedItemCount > 0 && (<div className=\"history\">\n          <h1>Completed Items:</h1>\n          {itemList.map(item => {\n            if (item.deleted) {\n              return (\n                <div className=\"history-item\">\n                  <h2>{item.text}</h2>\n                  <p>{item.description}</p>\n                  <span>{item.createdAt}</span><span>{item.lastUpdatedAt}</span>\n                </div>\n              );\n            }\n          })}\n        </div>)}\n      </Fragment>\n    )\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}