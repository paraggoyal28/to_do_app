[{"C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\index.js":"1","C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\App.js":"2","C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\components\\Item\\index.jsx":"3"},{"size":221,"mtime":1610090507101,"results":"4","hashOfConfig":"5"},{"size":6936,"mtime":1610119909037,"results":"6","hashOfConfig":"5"},{"size":2722,"mtime":1610119539369,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lhlkdt",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\index.js",[],"C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\App.js",["15","16","17","18","19"],"C:\\Users\\Parag\\Documents\\ToDoApp\\to_do_app\\src\\components\\Item\\index.jsx",["20","21","22","23","24","25"],"import React from 'react';\r\nimport './index.css';\r\n\r\nclass Item extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleMouseEnter = (e) => {\r\n        const deleteIcon = document.getElementById('delete' + e.target.dataset.num);\r\n        const addIcon = document.getElementById('add' + e.target.dataset.num);\r\n        deleteIcon.style.display = 'inline-block';\r\n        addIcon.style.display = 'inline-block';\r\n\r\n    }\r\n\r\n    handleMouseLeave = (e) => {\r\n        const deleteIcon = document.getElementById('delete' + e.target.dataset.num);\r\n        const addIcon = document.getElementById('add' + e.target.dataset.num);\r\n        deleteIcon.style.display = 'none';\r\n        addIcon.style.display = 'none';\r\n    }\r\n\r\n    handleAddDescription = (e) => {\r\n        const descriptionBox = document.getElementById('descriptionInput' + e.target.dataset.num);\r\n        const descriptionText = document.getElementById('description' + e.target.dataset.num);\r\n        descriptionBox.style.display = 'inline-block';\r\n        descriptionText.style.display = 'none';\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { id, marked, createdAt, lastUpdatedAt, deleted, text, description } = this.props.item;\r\n        return (\r\n            <div data-num={id}>\r\n                <div data-num={id} id={'view' + id} className=\"view\" onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n                    <div data-num={id}>\r\n                        <input data-num={id} className=\"toggle\" type=\"checkbox\" checked={marked} id={\"check\" + id} onChange={this.props.handleChangeSingle} />\r\n                        <label data-num={id} className=\"viewText\">{text}</label>\r\n                        <a data-num={id} id={'add' + id} className=\"add\" onClick={this.handleAddDescription}></a>\r\n                        <a data-num={id} id={'delete' + id} className=\"delete\" onClick={this.props.handleDelete}></a>\r\n                    </div>\r\n                    <div data-num={id} className=\"description\" id={'description' + id}>\r\n                        {description}\r\n                    </div>\r\n                    <div data-num={id} className=\"date\">\r\n                        <span data-num={id} className=\"created\">Created At: {createdAt} </span>\r\n                        <span data-num={id} className=\"updated\">Last Updated At: {lastUpdatedAt}</span>\r\n                    </div>\r\n                </div>\r\n                <input data-num={id} className=\"descriptionInput\" value={description} id={'descriptionInput' + id} onKeyPress={this.props.handleKeyPress}\r\n                    onChange={this.props.handleDescriptionChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Item;",{"ruleId":"26","severity":1,"message":"27","line":116,"column":40,"nodeType":"28","messageId":"29","endLine":116,"endColumn":42},{"ruleId":"26","severity":1,"message":"27","line":116,"column":85,"nodeType":"28","messageId":"29","endLine":116,"endColumn":87},{"ruleId":"26","severity":1,"message":"27","line":117,"column":51,"nodeType":"28","messageId":"29","endLine":117,"endColumn":53},{"ruleId":"26","severity":1,"message":"27","line":117,"column":101,"nodeType":"28","messageId":"29","endLine":117,"endColumn":103},{"ruleId":"30","severity":1,"message":"31","line":174,"column":41,"nodeType":"32","endLine":174,"endColumn":99},{"ruleId":"33","severity":1,"message":"34","line":5,"column":5,"nodeType":"35","messageId":"36","endLine":7,"endColumn":6},{"ruleId":"37","severity":1,"message":"38","line":35,"column":55,"nodeType":"39","messageId":"40","endLine":35,"endColumn":62},{"ruleId":"41","severity":1,"message":"42","line":42,"column":25,"nodeType":"32","endLine":42,"endColumn":110},{"ruleId":"30","severity":1,"message":"31","line":42,"column":25,"nodeType":"32","endLine":42,"endColumn":110},{"ruleId":"41","severity":1,"message":"42","line":43,"column":25,"nodeType":"32","endLine":43,"endColumn":114},{"ruleId":"30","severity":1,"message":"31","line":43,"column":25,"nodeType":"32","endLine":43,"endColumn":114},"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'deleted' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader."]